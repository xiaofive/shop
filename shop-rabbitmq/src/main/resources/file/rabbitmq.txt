默认exchange
隐式绑定到每个队列，路由密钥等于队列名称。
无法显式绑定到默认exchange或从默认exchange解除绑定。
它也不能被删除。


消息顺序性:
错乱场景一
   一个queue，有多个consumer去消费，这样就会造成顺序的错误，consumer从MQ里面读取数据是有序的，
但是每个consumer的执行时间是不固定的，无法保证先读到消息的consumer一定先完成操作，这样就会出现消息并没有按照顺序执行，造成数据顺序错误。
错乱场景二
   一个queue对应一个consumer，但是consumer里面进行了多线程消费，这样也会造成消息消费顺序错误。

解决方案：
一个queue但是对应一个consumer，然后这个consumer内部用内存队列做排队，然后分发给底层不同的worker来处理


消息积压解决方案：
方案一：通常的解决方案就是增加消费端实例。说白了就是增加机器。如果出现线上事故，能申请多少机器就申请多少机器，争取在最短的时间内消费掉积压在MQ中的消息。

方案二：如果申请机器行不通，毕竟公司的机器是有限的，此时可以增加消费端的消费能力。在MQ的配置中配置"最大消费者数量"与"每次从队列中获取的消息数量"

方案三：如果还是不能解决问题的话，还有另外一种解决方案。紧急上线专门用于记录消息的队列，不多BB，先把MQ中的消息记录到数据库中，然后再慢慢的消化处理。